2018-08-06 11:30:05,395 [] [] [] [13804] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851: startup date [Mon Aug 06 11:30:05 CST 2018]; root of context hierarchy
2018-08-06 11:30:05,651 [] [] [] [13804] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:30:05,689 [] [] [] [13804] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:30:06,971 [] [] [] [13804] [main] INFO  c.windmt.ApiGatewayApplicationTests => No active profile set, falling back to default profiles: default
2018-08-06 11:30:06,976 [] [] [] [13804] [main] INFO  o.s.w.c.s.GenericWebApplicationContext => Refreshing org.springframework.web.context.support.GenericWebApplicationContext@560513ce: startup date [Mon Aug 06 11:30:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:30:07,821 [] [] [] [13804] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 11:30:07,834 [] [] [] [13804] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 11:30:08,242 [] [] [] [13804] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=cb2b04e0-a6a0-3de7-b264-a775077888c5
2018-08-06 11:30:08,313 [] [] [] [13804] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:30:08,698 [] [] [] [13804] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:30:09,460 [] [] [] [13804] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:30:09,465 [] [] [] [13804] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:30:09,476 [] [] [] [13804] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:30:09,478 [] [] [] [13804] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:30:09,676 [] [] [] [13804] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:30:10,020 [] [] [] [13804] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@560513ce: startup date [Mon Aug 06 11:30:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:30:10,217 [] [] [] [13804] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 11:30:10,218 [] [] [] [13804] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:30:10,293 [] [] [] [13804] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:30:10,297 [] [] [] [13804] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:30:11,809 [] [] [] [13804] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:30:13,047 [] [] [] [13804] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:30:15,767 [] [] [] [13804] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 11:30:15,924 [] [] [] [13804] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 2 endpoint(s) beneath base path '/actuator'
2018-08-06 11:30:15,953 [] [] [] [13804] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-08-06 11:30:15,959 [] [] [] [13804] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2018-08-06 11:30:15,961 [] [] [] [13804] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:30:16,034 [] [] [] [13804] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 11:30:16,076 [] [] [] [13804] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 11:30:16,129 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 11:30:16,253 [] [] [] [13804] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 11:30:16,253 [] [] [] [13804] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 11:30:16,447 [] [] [] [13804] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 11:30:16,448 [] [] [] [13804] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 11:30:16,675 [] [] [] [13804] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 11:30:16,750 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 11:30:16,751 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 11:30:16,932 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => The response status is 200
2018-08-06 11:30:16,936 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 11:30:16,938 [] [] [] [13804] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 11:30:16,941 [] [] [] [13804] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533526216940 with initial instances count: 3
2018-08-06 11:30:16,956 [] [] [] [13804] [main] INFO  c.windmt.ApiGatewayApplicationTests => Started ApiGatewayApplicationTests in 13.451 seconds (JVM running for 14.348)
2018-08-06 11:30:17,097 [] [] [] [13804] [Thread-12] INFO  o.s.w.c.s.GenericWebApplicationContext => Closing org.springframework.web.context.support.GenericWebApplicationContext@560513ce: startup date [Mon Aug 06 11:30:06 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:30:17,098 [] [] [] [13804] [Thread-12] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Unregistering application api-gateway with eureka with status DOWN
2018-08-06 11:30:17,100 [] [] [] [13804] [Thread-12] WARN  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533526217100, current=DOWN, previous=STARTING]
2018-08-06 11:30:17,104 [] [] [] [13804] [Thread-12] INFO  o.s.c.s.DefaultLifecycleProcessor => Stopping beans in phase 0
2018-08-06 11:30:17,108 [] [] [] [13804] [Thread-12] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Stopping filter initializer
2018-08-06 11:30:17,123 [] [] [] [13804] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1: registering service...
2018-08-06 11:30:17,158 [] [] [] [13804] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - registration status: 204
2018-08-06 11:30:17,587 [] [] [] [13804] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6704df84}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 11:30:17 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@560513ce
2018-08-06 11:30:17,631 [] [] [] [13804] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6704df84}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:30:17,777 [] [] [] [13804] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@6704df84}] WARN  o.s.c.a.AnnotationConfigApplicationContext => Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'httpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration$ApacheHttpClientConfiguration: Unsatisfied dependency expressed through method 'httpClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'apacheHttpClientFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2018-08-06 11:30:17,779 [] [] [] [13804] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Shutting down DiscoveryClient ...
2018-08-06 11:30:20,783 [] [] [] [13804] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Unregistering ...
2018-08-06 11:30:20,800 [] [] [] [13804] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - deregister  status: 200
2018-08-06 11:30:20,823 [] [] [] [13804] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Completed shut down of DiscoveryClient
2018-08-06 11:45:23,588 [] [] [] [11084] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851: startup date [Mon Aug 06 11:45:23 CST 2018]; root of context hierarchy
2018-08-06 11:45:23,890 [] [] [] [11084] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:45:23,920 [] [] [] [11084] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:45:25,216 [] [] [] [11084] [main] INFO  c.windmt.ApiGatewayApplicationTests => No active profile set, falling back to default profiles: default
2018-08-06 11:45:25,220 [] [] [] [11084] [main] INFO  o.s.w.c.s.GenericWebApplicationContext => Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:45:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:45:26,001 [] [] [] [11084] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 11:45:26,013 [] [] [] [11084] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 11:45:26,632 [] [] [] [11084] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=cb2b04e0-a6a0-3de7-b264-a775077888c5
2018-08-06 11:45:26,730 [] [] [] [11084] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:45:27,187 [] [] [] [11084] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:45:27,690 [] [] [] [11084] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:45:27,690 [] [] [] [11084] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:45:27,710 [] [] [] [11084] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:45:27,711 [] [] [] [11084] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:45:27,874 [] [] [] [11084] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:45:28,255 [] [] [] [11084] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:45:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:45:28,364 [] [] [] [11084] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 11:45:28,365 [] [] [] [11084] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:45:28,465 [] [] [] [11084] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:45:28,466 [] [] [] [11084] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:45:30,280 [] [] [] [11084] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:45:31,440 [] [] [] [11084] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:45:33,397 [] [] [] [11084] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 11:45:33,529 [] [] [] [11084] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 1 endpoint(s) beneath base path '/actuator'
2018-08-06 11:45:33,538 [] [] [] [11084] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:45:33,600 [] [] [] [11084] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 11:45:33,632 [] [] [] [11084] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 11:45:33,685 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 11:45:33,745 [] [] [] [11084] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 11:45:33,745 [] [] [] [11084] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 11:45:33,949 [] [] [] [11084] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 11:45:33,950 [] [] [] [11084] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 11:45:34,149 [] [] [] [11084] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 11:45:34,227 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 11:45:34,228 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 11:45:36,298 [] [] [] [11084] [main] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb$$FastClassBySpringCGLIB$$5e7d5a1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy125.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient.getServices(EurekaDiscoveryClient.java:119)
	at org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient.getServices(CompositeDiscoveryClient.java:48)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:116)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:43)
	at org.springframework.cloud.netflix.zuul.filters.SimpleRouteLocator.doRefresh(SimpleRouteLocator.java:170)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.refresh(DiscoveryClientRouteLocator.java:166)
	at org.springframework.cloud.netflix.zuul.filters.CompositeRouteLocator.refresh(CompositeRouteLocator.java:75)
	at org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping.setDirty(ZuulHandlerMapping.java:79)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.reset(ZuulServerAutoConfiguration.java:264)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.onApplicationEvent(ZuulServerAutoConfiguration.java:245)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:888)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:139)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 100 common frames omitted
2018-08-06 11:45:36,299 [] [] [] [11084] [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:45:36,300 [] [] [] [11084] [main] ERROR c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb$$FastClassBySpringCGLIB$$5e7d5a1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy125.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient.getServices(EurekaDiscoveryClient.java:119)
	at org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient.getServices(CompositeDiscoveryClient.java:48)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:116)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:43)
	at org.springframework.cloud.netflix.zuul.filters.SimpleRouteLocator.doRefresh(SimpleRouteLocator.java:170)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.refresh(DiscoveryClientRouteLocator.java:166)
	at org.springframework.cloud.netflix.zuul.filters.CompositeRouteLocator.refresh(CompositeRouteLocator.java:75)
	at org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping.setDirty(ZuulHandlerMapping.java:79)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.reset(ZuulServerAutoConfiguration.java:264)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.onApplicationEvent(ZuulServerAutoConfiguration.java:245)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:888)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:139)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-08-06 11:45:36,300 [] [] [] [11084] [main] WARN  c.netflix.discovery.DiscoveryClient => Using default backup registry implementation which does not do anything.
2018-08-06 11:45:36,301 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 11:45:36,306 [] [] [] [11084] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 11:45:36,310 [] [] [] [11084] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533527136309 with initial instances count: 0
2018-08-06 11:45:36,328 [] [] [] [11084] [main] INFO  c.windmt.ApiGatewayApplicationTests => Started ApiGatewayApplicationTests in 14.488 seconds (JVM running for 15.448)
2018-08-06 11:45:36,491 [] [] [] [11084] [Thread-12] INFO  o.s.w.c.s.GenericWebApplicationContext => Closing org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:45:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:45:36,493 [] [] [] [11084] [Thread-12] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Unregistering application api-gateway with eureka with status DOWN
2018-08-06 11:45:36,494 [] [] [] [11084] [Thread-12] WARN  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533527136494, current=DOWN, previous=STARTING]
2018-08-06 11:45:36,498 [] [] [] [11084] [Thread-12] INFO  o.s.c.s.DefaultLifecycleProcessor => Stopping beans in phase 0
2018-08-06 11:45:36,499 [] [] [] [11084] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1: registering service...
2018-08-06 11:45:36,502 [] [] [] [11084] [Thread-12] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Stopping filter initializer
2018-08-06 11:45:37,514 [] [] [] [11084] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Shutting down DiscoveryClient ...
2018-08-06 11:45:37,526 [] [] [] [11084] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@15994b0b}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 11:45:37 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fff25f1
2018-08-06 11:45:37,583 [] [] [] [11084] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@15994b0b}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:45:37,703 [] [] [] [11084] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@15994b0b}] WARN  o.s.c.a.AnnotationConfigApplicationContext => Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'httpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration$ApacheHttpClientConfiguration: Unsatisfied dependency expressed through method 'httpClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'apacheHttpClientFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2018-08-06 11:45:38,528 [] [] [] [11084] [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2018-08-06 11:45:38,529 [] [] [] [11084] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:45:38,529 [] [] [] [11084] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-08-06 11:45:38,530 [] [] [] [11084] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator => There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-08-06 11:45:38,532 [] [] [] [11084] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Unregistering ...
2018-08-06 11:45:40,552 [] [] [] [11084] [Thread-12] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy125.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
2018-08-06 11:45:40,552 [] [] [] [11084] [Thread-12] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:45:40,553 [] [] [] [11084] [Thread-12] ERROR c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy125.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-08-06 11:45:40,577 [] [] [] [11084] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Completed shut down of DiscoveryClient
2018-08-06 11:47:11,606 [] [] [] [3424] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851: startup date [Mon Aug 06 11:47:11 CST 2018]; root of context hierarchy
2018-08-06 11:47:11,872 [] [] [] [3424] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:47:11,919 [] [] [] [3424] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:47:13,235 [] [] [] [3424] [main] INFO  c.windmt.ApiGatewayApplicationTests => No active profile set, falling back to default profiles: default
2018-08-06 11:47:13,241 [] [] [] [3424] [main] INFO  o.s.w.c.s.GenericWebApplicationContext => Refreshing org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:47:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:47:14,024 [] [] [] [3424] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 11:47:14,036 [] [] [] [3424] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 11:47:14,538 [] [] [] [3424] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=cb2b04e0-a6a0-3de7-b264-a775077888c5
2018-08-06 11:47:14,609 [] [] [] [3424] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:47:14,999 [] [] [] [3424] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$13b17dac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:47:15,569 [] [] [] [3424] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:47:15,570 [] [] [] [3424] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:47:15,578 [] [] [] [3424] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:47:15,579 [] [] [] [3424] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:47:15,748 [] [] [] [3424] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:47:16,054 [] [] [] [3424] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:47:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:47:16,138 [] [] [] [3424] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 11:47:16,139 [] [] [] [3424] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:47:16,197 [] [] [] [3424] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:47:16,199 [] [] [] [3424] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:47:17,661 [] [] [] [3424] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:47:18,818 [] [] [] [3424] [main] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:47:20,845 [] [] [] [3424] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 11:47:20,979 [] [] [] [3424] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 1 endpoint(s) beneath base path '/actuator'
2018-08-06 11:47:20,994 [] [] [] [3424] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:47:21,115 [] [] [] [3424] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 11:47:21,163 [] [] [] [3424] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 11:47:21,218 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 11:47:21,284 [] [] [] [3424] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 11:47:21,284 [] [] [] [3424] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 11:47:21,432 [] [] [] [3424] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 11:47:21,432 [] [] [] [3424] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 11:47:21,616 [] [] [] [3424] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 11:47:21,752 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 11:47:21,752 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 11:47:21,752 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 11:47:21,753 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 11:47:21,753 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 11:47:21,753 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 11:47:21,753 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 11:47:23,839 [] [] [] [3424] [main] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.get(WebResource.java:509)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplicationsInternal(AbstractJerseyEurekaHttpClient.java:194)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.getApplications(AbstractJerseyEurekaHttpClient.java:165)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb$$FastClassBySpringCGLIB$$5e7d5a1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy125.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient.getServices(EurekaDiscoveryClient.java:119)
	at org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient.getServices(CompositeDiscoveryClient.java:48)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:116)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:43)
	at org.springframework.cloud.netflix.zuul.filters.SimpleRouteLocator.doRefresh(SimpleRouteLocator.java:170)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.refresh(DiscoveryClientRouteLocator.java:166)
	at org.springframework.cloud.netflix.zuul.filters.CompositeRouteLocator.refresh(CompositeRouteLocator.java:75)
	at org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping.setDirty(ZuulHandlerMapping.java:79)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.reset(ZuulServerAutoConfiguration.java:264)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.onApplicationEvent(ZuulServerAutoConfiguration.java:245)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:888)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:139)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 100 common frames omitted
2018-08-06 11:47:23,844 [] [] [] [3424] [main] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:47:23,845 [] [] [] [3424] [main] ERROR c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - was unable to refresh its cache! status = Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$6.execute(EurekaHttpClientDecorator.java:137)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.getApplications(EurekaHttpClientDecorator.java:134)
	at com.netflix.discovery.DiscoveryClient.getAndStoreFullRegistry(DiscoveryClient.java:1051)
	at com.netflix.discovery.DiscoveryClient.fetchRegistry(DiscoveryClient.java:965)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:414)
	at com.netflix.discovery.DiscoveryClient.<init>(DiscoveryClient.java:269)
	at org.springframework.cloud.netflix.eureka.CloudEurekaClient.<init>(CloudEurekaClient.java:63)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration.eurekaClient(EurekaClientAutoConfiguration.java:269)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.CGLIB$eurekaClient$1(<generated>)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb$$FastClassBySpringCGLIB$$5e7d5a1.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361)
	at org.springframework.cloud.netflix.eureka.EurekaClientAutoConfiguration$RefreshableEurekaClientConfiguration$$EnhancerBySpringCGLIB$$1b1a76cb.eurekaClient(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1256)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1105)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:543)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:503)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$1(AbstractBeanFactory.java:353)
	at org.springframework.cloud.context.scope.GenericScope$BeanLifecycleWrapper.getBean(GenericScope.java:390)
	at org.springframework.cloud.context.scope.GenericScope.get(GenericScope.java:184)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:350)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199)
	at org.springframework.aop.target.SimpleBeanTargetSource.getTarget(SimpleBeanTargetSource.java:35)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:193)
	at com.sun.proxy.$Proxy125.getApplications(Unknown Source)
	at org.springframework.cloud.netflix.eureka.EurekaDiscoveryClient.getServices(EurekaDiscoveryClient.java:119)
	at org.springframework.cloud.client.discovery.composite.CompositeDiscoveryClient.getServices(CompositeDiscoveryClient.java:48)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:116)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.locateRoutes(DiscoveryClientRouteLocator.java:43)
	at org.springframework.cloud.netflix.zuul.filters.SimpleRouteLocator.doRefresh(SimpleRouteLocator.java:170)
	at org.springframework.cloud.netflix.zuul.filters.discovery.DiscoveryClientRouteLocator.refresh(DiscoveryClientRouteLocator.java:166)
	at org.springframework.cloud.netflix.zuul.filters.CompositeRouteLocator.refresh(CompositeRouteLocator.java:75)
	at org.springframework.cloud.netflix.zuul.web.ZuulHandlerMapping.setDirty(ZuulHandlerMapping.java:79)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.reset(ZuulServerAutoConfiguration.java:264)
	at org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulRefreshListener.onApplicationEvent(ZuulServerAutoConfiguration.java:245)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:400)
	at org.springframework.context.support.AbstractApplicationContext.publishEvent(AbstractApplicationContext.java:354)
	at org.springframework.context.support.AbstractApplicationContext.finishRefresh(AbstractApplicationContext.java:888)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:553)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:759)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:395)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:327)
	at org.springframework.boot.test.context.SpringBootContextLoader.loadContext(SpringBootContextLoader.java:139)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContextInternal(DefaultCacheAwareContextLoaderDelegate.java:99)
	at org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate.loadContext(DefaultCacheAwareContextLoaderDelegate.java:117)
	at org.springframework.test.context.support.DefaultTestContext.getApplicationContext(DefaultTestContext.java:108)
	at org.springframework.test.context.web.ServletTestExecutionListener.setUpRequestContextIfNecessary(ServletTestExecutionListener.java:190)
	at org.springframework.test.context.web.ServletTestExecutionListener.prepareTestInstance(ServletTestExecutionListener.java:132)
	at org.springframework.test.context.TestContextManager.prepareTestInstance(TestContextManager.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.createTest(SpringJUnit4ClassRunner.java:227)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner$1.runReflectiveCall(SpringJUnit4ClassRunner.java:289)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.methodBlock(SpringJUnit4ClassRunner.java:291)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:246)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)
	at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)
	at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:365)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeWithRerun(JUnit4Provider.java:273)
	at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:238)
	at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:159)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:379)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:340)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:125)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:413)
2018-08-06 11:47:23,846 [] [] [] [3424] [main] WARN  c.netflix.discovery.DiscoveryClient => Using default backup registry implementation which does not do anything.
2018-08-06 11:47:23,849 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 11:47:23,852 [] [] [] [3424] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 11:47:23,859 [] [] [] [3424] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533527243857 with initial instances count: 0
2018-08-06 11:47:23,882 [] [] [] [3424] [main] INFO  c.windmt.ApiGatewayApplicationTests => Started ApiGatewayApplicationTests in 13.989 seconds (JVM running for 15.027)
2018-08-06 11:47:24,036 [] [] [] [3424] [Thread-12] INFO  o.s.w.c.s.GenericWebApplicationContext => Closing org.springframework.web.context.support.GenericWebApplicationContext@fff25f1: startup date [Mon Aug 06 11:47:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ebb6851
2018-08-06 11:47:24,038 [] [] [] [3424] [Thread-12] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Unregistering application api-gateway with eureka with status DOWN
2018-08-06 11:47:24,041 [] [] [] [3424] [Thread-12] WARN  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533527244041, current=DOWN, previous=STARTING]
2018-08-06 11:47:24,045 [] [] [] [3424] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1: registering service...
2018-08-06 11:47:24,045 [] [] [] [3424] [Thread-12] INFO  o.s.c.s.DefaultLifecycleProcessor => Stopping beans in phase 0
2018-08-06 11:47:24,046 [] [] [] [3424] [Thread-12] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Stopping filter initializer
2018-08-06 11:47:24,899 [] [] [] [3424] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54a056e4}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 11:47:24 CST 2018]; parent: org.springframework.web.context.support.GenericWebApplicationContext@fff25f1
2018-08-06 11:47:24,953 [] [] [] [3424] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54a056e4}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:47:25,052 [] [] [] [3424] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Shutting down DiscoveryClient ...
2018-08-06 11:47:25,087 [] [] [] [3424] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@54a056e4}] WARN  o.s.c.a.AnnotationConfigApplicationContext => Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'httpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration$ApacheHttpClientConfiguration: Unsatisfied dependency expressed through method 'httpClient' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'apacheHttpClientFactory': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2018-08-06 11:47:26,068 [] [] [] [3424] [DiscoveryClient-InstanceInfoReplicator-0] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 30 common frames omitted
2018-08-06 11:47:26,069 [] [] [] [3424] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:47:26,070 [] [] [] [3424] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - registration failed Cannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-08-06 11:47:26,070 [] [] [] [3424] [DiscoveryClient-InstanceInfoReplicator-0] WARN  c.n.discovery.InstanceInfoReplicator => There was a problem with the instance info replicator
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56)
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829)
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121)
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-08-06 11:47:26,071 [] [] [] [3424] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Unregistering ...
2018-08-06 11:47:28,096 [] [] [] [3424] [Thread-12] ERROR c.n.d.s.t.d.RedirectingEurekaHttpClient => Request execution error
com.sun.jersey.api.client.ClientHandlerException: java.net.ConnectException: Connection refused: connect
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187)
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123)
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27)
	at com.sun.jersey.api.client.Client.handle(Client.java:652)
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682)
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74)
	at com.sun.jersey.api.client.WebResource$Builder.delete(WebResource.java:591)
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.cancel(AbstractJerseyEurekaHttpClient.java:76)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118)
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy125.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
Caused by: java.net.ConnectException: Connection refused: connect
	at java.net.DualStackPlainSocketImpl.waitForConnect(Native Method)
	at java.net.DualStackPlainSocketImpl.socketConnect(DualStackPlainSocketImpl.java:85)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.PlainSocketImpl.connect(PlainSocketImpl.java:172)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.scheme.PlainSocketFactory.connectSocket(PlainSocketFactory.java:121)
	at org.apache.http.impl.conn.DefaultClientConnectionOperator.openConnection(DefaultClientConnectionOperator.java:180)
	at org.apache.http.impl.conn.AbstractPoolEntry.open(AbstractPoolEntry.java:144)
	at org.apache.http.impl.conn.AbstractPooledConnAdapter.open(AbstractPooledConnAdapter.java:134)
	at org.apache.http.impl.client.DefaultRequestDirector.tryConnect(DefaultRequestDirector.java:610)
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:445)
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56)
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173)
	... 46 common frames omitted
2018-08-06 11:47:28,097 [] [] [] [3424] [Thread-12] WARN  c.n.d.s.t.d.RetryableEurekaHttpClient => Request execution failed with message: java.net.ConnectException: Connection refused: connect
2018-08-06 11:47:28,097 [] [] [] [3424] [Thread-12] ERROR c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:-1 - de-registration failedCannot execute request on any known server
com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$2.execute(EurekaHttpClientDecorator.java:74)
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77)
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.cancel(EurekaHttpClientDecorator.java:71)
	at com.netflix.discovery.DiscoveryClient.unregister(DiscoveryClient.java:923)
	at com.netflix.discovery.DiscoveryClient.shutdown(DiscoveryClient.java:901)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:223)
	at org.springframework.cloud.context.scope.GenericScope$LockedScopedProxyFactoryBean.invoke(GenericScope.java:494)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy125.shutdown(Unknown Source)
	at org.springframework.cloud.netflix.eureka.serviceregistry.EurekaRegistration.close(EurekaRegistration.java:207)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337)
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:957)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:964)
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041)
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017)
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937)
2018-08-06 11:47:28,112 [] [] [] [3424] [Thread-12] INFO  c.netflix.discovery.DiscoveryClient => Completed shut down of DiscoveryClient
2018-08-06 11:55:51,922 [] [] [] [27384] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@298a5e20: startup date [Mon Aug 06 11:55:51 CST 2018]; root of context hierarchy
2018-08-06 11:55:52,294 [] [] [] [27384] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:55:52,379 [] [] [] [27384] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6786946] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:55:53,704 [] [] [] [27384] [main] INFO  com.tuobuxie.ApiGatewayApplication => No active profile set, falling back to default profiles: default
2018-08-06 11:55:53,719 [] [] [] [27384] [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext => Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@340da44c: startup date [Mon Aug 06 11:55:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@298a5e20
2018-08-06 11:55:54,414 [] [] [] [27384] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 11:55:54,426 [] [] [] [27384] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 11:55:54,786 [] [] [] [27384] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=b61ca153-2faf-3097-aa6a-e9c32aac8404
2018-08-06 11:55:54,812 [] [] [] [27384] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 11:55:55,191 [] [] [] [27384] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f6786946] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 11:55:55,616 [] [] [] [27384] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat initialized with port(s): 14000 (http)
2018-08-06 11:55:55,632 [] [] [] [27384] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Initializing ProtocolHandler ["http-nio-14000"]
2018-08-06 11:55:55,644 [] [] [] [27384] [main] INFO  o.a.catalina.core.StandardService => Starting service [Tomcat]
2018-08-06 11:55:55,645 [] [] [] [27384] [main] INFO  o.a.catalina.core.StandardEngine => Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-06 11:55:55,655 [] [] [] [27384] [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener => The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\lsf\JavaDevelop\java8-x64\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/lsf/JavaDevelop/java8-x64/jre/bin/server;D:/lsf/JavaDevelop/java8-x64/jre/bin;D:/lsf/JavaDevelop/java8-x64/jre/lib/amd64;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Pandoc\;C:\Users\lishaofeng\AppData\Local\Microsoft\WindowsApps;D:\lsf\learn\thrift;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;D:\lsf\JavaDevelop\java8-x64\bin;D:\lsf\JavaDevelop\java8-x64\jre\bin;D:\lsf\JavaDevelop\gradle-4.6\bin;D:\lsf\JavaDevelop\cygwin64\bin;C:\Users\lishaofeng\AppData\Local\GitHubDesktop\bin;D:\lsf\JavaDevelop\eclipse-4.6-jee-64;;.]
2018-08-06 11:55:55,788 [] [] [] [27384] [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring embedded WebApplicationContext
2018-08-06 11:55:55,788 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.web.context.ContextLoader => Root WebApplicationContext: initialization completed in 2069 ms
2018-08-06 11:55:56,151 [] [] [] [27384] [localhost-startStop-1] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:55:56,151 [] [] [] [27384] [localhost-startStop-1] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:55:56,169 [] [] [] [27384] [localhost-startStop-1] INFO  c.n.config.DynamicPropertyFactory => DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1e198b58
2018-08-06 11:55:57,915 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:55:59,090 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 11:55:59,944 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-06 11:55:59,945 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'tracingFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'requestContextFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpTraceFilter' to: [/*]
2018-08-06 11:55:59,946 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-08-06 11:55:59,947 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet dispatcherServlet mapped to [/]
2018-08-06 11:55:59,951 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet zuulServlet mapped to [/zuul/*]
2018-08-06 11:55:59,952 [] [] [] [27384] [localhost-startStop-1] INFO  o.s.b.a.e.w.ServletEndpointRegistrar => Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-08-06 11:56:00,051 [] [] [] [27384] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 11:56:00,052 [] [] [] [27384] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 11:56:00,176 [] [] [] [27384] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:56:00,459 [] [] [] [27384] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@340da44c: startup date [Mon Aug 06 11:55:53 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@298a5e20
2018-08-06 11:56:00,535 [] [] [] [27384] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 11:56:00,537 [] [] [] [27384] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:56:00,584 [] [] [] [27384] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:56:00,584 [] [] [] [27384] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 11:56:01,631 [] [] [] [27384] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 11:56:01,777 [] [] [] [27384] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 1 endpoint(s) beneath base path '/actuator'
2018-08-06 11:56:01,793 [] [] [] [27384] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 11:56:01,874 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Registering beans for JMX exposure on startup
2018-08-06 11:56:01,883 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-06 11:56:01,889 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-06 11:56:01,890 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-06 11:56:01,895 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-06 11:56:01,909 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-06 11:56:01,919 [] [] [] [27384] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=340da44c,type=ConfigurationPropertiesRebinder]
2018-08-06 11:56:01,935 [] [] [] [27384] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 11:56:01,944 [] [] [] [27384] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 11:56:01,992 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 11:56:02,052 [] [] [] [27384] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 11:56:02,052 [] [] [] [27384] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 11:56:02,187 [] [] [] [27384] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 11:56:02,187 [] [] [] [27384] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 11:56:02,366 [] [] [] [27384] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 11:56:02,449 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 11:56:02,450 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 11:56:02,451 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 11:56:02,451 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 11:56:02,452 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 11:56:02,453 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 11:56:02,454 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 11:56:02,931 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => The response status is 200
2018-08-06 11:56:02,933 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 11:56:02,935 [] [] [] [27384] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 11:56:02,938 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533527762937 with initial instances count: 0
2018-08-06 11:56:02,946 [] [] [] [27384] [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Registering application api-gateway with eureka with status UP
2018-08-06 11:56:02,948 [] [] [] [27384] [main] INFO  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533527762948, current=UP, previous=STARTING]
2018-08-06 11:56:02,973 [] [] [] [27384] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Starting ProtocolHandler ["http-nio-14000"]
2018-08-06 11:56:02,986 [] [] [] [27384] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000: registering service...
2018-08-06 11:56:03,109 [] [] [] [27384] [main] INFO  o.a.tomcat.util.net.NioSelectorPool => Using a shared selector for servlet write/read
2018-08-06 11:56:03,145 [] [] [] [27384] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat started on port(s): 14000 (http) with context path ''
2018-08-06 11:56:03,146 [] [] [] [27384] [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration => Updating port to 14000
2018-08-06 11:56:03,156 [] [] [] [27384] [main] INFO  com.tuobuxie.ApiGatewayApplication => Started ApiGatewayApplication in 13.675 seconds (JVM running for 14.605)
2018-08-06 11:56:03,867 [] [] [] [27384] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000 - registration status: 204
2018-08-06 11:56:33,114 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 11:56:33,114 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 11:56:33,114 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 11:56:33,390 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 11:56:33,390 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 11:56:33,391 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: false
2018-08-06 11:56:33,391 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 11:56:33,451 [] [] [] [27384] [DiscoveryClient-CacheRefreshExecutor-0] INFO  c.netflix.discovery.DiscoveryClient => The response status is 200
2018-08-06 12:01:02,458 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:06:02,460 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:11:02,462 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:16:02,467 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:21:02,469 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:26:02,472 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:31:02,473 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:36:02,475 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:41:02,476 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:46:02,477 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:51:02,478 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 12:56:02,480 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:01:02,481 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:06:02,483 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:11:02,484 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:16:02,486 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:21:02,488 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:26:02,489 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:31:02,490 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:36:02,491 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:36:35,507 [] [] [] [27384] [http-nio-14000-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-06 13:36:35,507 [] [] [] [27384] [http-nio-14000-exec-10] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization started
2018-08-06 13:36:35,606 [] [] [] [27384] [http-nio-14000-exec-10] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization completed in 99 ms
2018-08-06 13:36:35,746 [758493892d5b3dc8] [] [758493892d5b3dc8] [27384] [http-nio-14000-exec-10] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:36:35,747 [758493892d5b3dc8] [] [758493892d5b3dc8] [27384] [http-nio-14000-exec-10] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-producer/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:36:35,761 [758493892d5b3dc8] [] [758493892d5b3dc8] [27384] [http-nio-14000-exec-10] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-client/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:36:35,761 [758493892d5b3dc8] [] [758493892d5b3dc8] [27384] [http-nio-14000-exec-10] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-consumer-feign-hystrix/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:36:35,761 [758493892d5b3dc8] [] [758493892d5b3dc8] [27384] [http-nio-14000-exec-10] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/turbine-stream/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:36:36,144 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 13:36:36 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@340da44c
2018-08-06 13:36:36,328 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 13:36:36,650 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  c.n.config.ChainedDynamicProperty => Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 13:36:36,683 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  c.n.u.c.ShutdownEnabledTimer => Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-08-06 13:36:36,724 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  c.n.loadbalancer.BaseLoadBalancer => Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-06 13:36:36,733 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  c.n.l.DynamicServerListLoadBalancer => Using serverListUpdater PollingServerListUpdater
2018-08-06 13:36:36,764 [] [] [] [27384] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@263f4612}] INFO  c.n.l.DynamicServerListLoadBalancer => DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@328485f9
2018-08-06 13:41:02,493 [] [] [] [27384] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:43:00,751 [] [] [] [18148] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@cc43f62: startup date [Mon Aug 06 13:43:00 CST 2018]; root of context hierarchy
2018-08-06 13:43:00,968 [] [] [] [18148] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 13:43:01,007 [] [] [] [18148] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9c2e1895] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 13:43:02,278 [] [] [] [18148] [main] INFO  com.tuobuxie.ApiGatewayApplication => No active profile set, falling back to default profiles: default
2018-08-06 13:43:02,301 [] [] [] [18148] [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext => Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf: startup date [Mon Aug 06 13:43:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cc43f62
2018-08-06 13:43:03,077 [] [] [] [18148] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 13:43:03,092 [] [] [] [18148] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 13:43:03,413 [] [] [] [18148] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=47160e54-7f75-3889-96e7-850c58b39a2e
2018-08-06 13:43:03,432 [] [] [] [18148] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 13:43:03,825 [] [] [] [18148] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$9c2e1895] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 13:43:04,348 [] [] [] [18148] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat initialized with port(s): 14000 (http)
2018-08-06 13:43:04,365 [] [] [] [18148] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Initializing ProtocolHandler ["http-nio-14000"]
2018-08-06 13:43:04,378 [] [] [] [18148] [main] INFO  o.a.catalina.core.StandardService => Starting service [Tomcat]
2018-08-06 13:43:04,378 [] [] [] [18148] [main] INFO  o.a.catalina.core.StandardEngine => Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-06 13:43:04,388 [] [] [] [18148] [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener => The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\lsf\JavaDevelop\java8-x64\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/lsf/JavaDevelop/java8-x64/jre/bin/server;D:/lsf/JavaDevelop/java8-x64/jre/bin;D:/lsf/JavaDevelop/java8-x64/jre/lib/amd64;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Pandoc\;C:\Users\lishaofeng\AppData\Local\Microsoft\WindowsApps;D:\lsf\learn\thrift;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;D:\lsf\JavaDevelop\java8-x64\bin;D:\lsf\JavaDevelop\java8-x64\jre\bin;D:\lsf\JavaDevelop\gradle-4.6\bin;D:\lsf\JavaDevelop\cygwin64\bin;C:\Users\lishaofeng\AppData\Local\GitHubDesktop\bin;D:\lsf\JavaDevelop\eclipse-4.6-jee-64;;.]
2018-08-06 13:43:04,524 [] [] [] [18148] [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring embedded WebApplicationContext
2018-08-06 13:43:04,525 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.web.context.ContextLoader => Root WebApplicationContext: initialization completed in 2224 ms
2018-08-06 13:43:04,873 [] [] [] [18148] [localhost-startStop-1] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 13:43:04,874 [] [] [] [18148] [localhost-startStop-1] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 13:43:04,913 [] [] [] [18148] [localhost-startStop-1] INFO  c.n.config.DynamicPropertyFactory => DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@773cb19e
2018-08-06 13:43:06,593 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 13:43:07,766 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 13:43:08,583 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-06 13:43:08,584 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'tracingFilter' to: [/*]
2018-08-06 13:43:08,584 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-08-06 13:43:08,584 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-06 13:43:08,585 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-06 13:43:08,585 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'requestContextFilter' to: [/*]
2018-08-06 13:43:08,590 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpTraceFilter' to: [/*]
2018-08-06 13:43:08,592 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-08-06 13:43:08,593 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet dispatcherServlet mapped to [/]
2018-08-06 13:43:08,595 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet zuulServlet mapped to [/zuul/*]
2018-08-06 13:43:08,598 [] [] [] [18148] [localhost-startStop-1] INFO  o.s.b.a.e.w.ServletEndpointRegistrar => Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-08-06 13:43:08,732 [] [] [] [18148] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 13:43:08,734 [] [] [] [18148] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 13:43:08,860 [] [] [] [18148] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 13:43:09,205 [] [] [] [18148] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf: startup date [Mon Aug 06 13:43:02 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@cc43f62
2018-08-06 13:43:09,299 [] [] [] [18148] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 13:43:09,301 [] [] [] [18148] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 13:43:09,362 [] [] [] [18148] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 13:43:09,363 [] [] [] [18148] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 13:43:10,473 [] [] [] [18148] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 13:43:10,648 [] [] [] [18148] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 1 endpoint(s) beneath base path '/actuator'
2018-08-06 13:43:10,660 [] [] [] [18148] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 13:43:10,734 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Registering beans for JMX exposure on startup
2018-08-06 13:43:10,743 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-06 13:43:10,747 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-06 13:43:10,749 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-06 13:43:10,753 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-06 13:43:10,764 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-06 13:43:10,775 [] [] [] [18148] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=349c1daf,type=ConfigurationPropertiesRebinder]
2018-08-06 13:43:10,790 [] [] [] [18148] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 13:43:10,800 [] [] [] [18148] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 13:43:10,859 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 13:43:10,949 [] [] [] [18148] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 13:43:10,959 [] [] [] [18148] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 13:43:11,248 [] [] [] [18148] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 13:43:11,248 [] [] [] [18148] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 13:43:11,416 [] [] [] [18148] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 13:43:11,495 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 13:43:11,500 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 13:43:11,501 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 13:43:11,502 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 13:43:11,504 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 13:43:11,505 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 13:43:11,505 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 13:43:11,690 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => The response status is 200
2018-08-06 13:43:11,701 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 13:43:11,704 [] [] [] [18148] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 13:43:11,708 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533534191707 with initial instances count: 6
2018-08-06 13:43:11,720 [] [] [] [18148] [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Registering application api-gateway with eureka with status UP
2018-08-06 13:43:11,720 [] [] [] [18148] [main] INFO  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533534191720, current=UP, previous=STARTING]
2018-08-06 13:43:11,722 [] [] [] [18148] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000: registering service...
2018-08-06 13:43:11,763 [] [] [] [18148] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Starting ProtocolHandler ["http-nio-14000"]
2018-08-06 13:43:11,779 [] [] [] [18148] [main] INFO  o.a.tomcat.util.net.NioSelectorPool => Using a shared selector for servlet write/read
2018-08-06 13:43:11,803 [] [] [] [18148] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000 - registration status: 204
2018-08-06 13:43:11,818 [] [] [] [18148] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat started on port(s): 14000 (http) with context path ''
2018-08-06 13:43:11,820 [] [] [] [18148] [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration => Updating port to 14000
2018-08-06 13:43:11,823 [] [] [] [18148] [main] INFO  com.tuobuxie.ApiGatewayApplication => Started ApiGatewayApplication in 12.928 seconds (JVM running for 13.468)
2018-08-06 13:43:14,361 [] [] [] [18148] [http-nio-14000-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-06 13:43:14,361 [] [] [] [18148] [http-nio-14000-exec-1] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization started
2018-08-06 13:43:14,390 [] [] [] [18148] [http-nio-14000-exec-1] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2018-08-06 13:43:14,566 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-client/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:43:14,567 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-producer/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:43:14,567 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:43:14,567 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-consumer-feign-hystrix/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:43:14,567 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/turbine-stream/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 13:43:14,606 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-eureka-consumer-feign-hystrix: startup date [Mon Aug 06 13:43:14 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf
2018-08-06 13:43:14,670 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 13:43:14,913 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 13:43:14,936 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.u.c.ShutdownEnabledTimer => Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-consumer-feign-hystrix
2018-08-06 13:43:14,973 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.loadbalancer.BaseLoadBalancer => Client: eureka-consumer-feign-hystrix instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-consumer-feign-hystrix,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-06 13:43:14,983 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.l.DynamicServerListLoadBalancer => Using serverListUpdater PollingServerListUpdater
2018-08-06 13:43:15,024 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 13:43:15,026 [9c72260b6533fdb1] [] [9c72260b6533fdb1] [18148] [http-nio-14000-exec-1] INFO  c.n.l.DynamicServerListLoadBalancer => DynamicServerListLoadBalancer for client eureka-consumer-feign-hystrix initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-consumer-feign-hystrix,current list of Servers=[localhost:9003],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9003;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@4cb6791e
2018-08-06 13:43:15,987 [] [] [] [18148] [PollingServerListUpdater-0] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 13:43:17,285 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 13:43:17 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@349c1daf
2018-08-06 13:43:17,399 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 13:43:17,517 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  c.n.config.ChainedDynamicProperty => Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 13:43:17,518 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  c.n.u.c.ShutdownEnabledTimer => Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-08-06 13:43:17,520 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  c.n.loadbalancer.BaseLoadBalancer => Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-06 13:43:17,520 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  c.n.l.DynamicServerListLoadBalancer => Using serverListUpdater PollingServerListUpdater
2018-08-06 13:43:17,521 [] [] [] [18148] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@5924b27d}] INFO  c.n.l.DynamicServerListLoadBalancer => DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7a94aff6
2018-08-06 13:44:50,514 [db6412287f9ff9c3] [] [db6412287f9ff9c3] [18148] [http-nio-14000-exec-8] WARN  o.s.c.n.z.f.post.SendErrorFilter => Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: null
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 71 common frames omitted
Caused by: java.lang.RuntimeException: java.net.SocketTimeoutException: Read timed out
	at rx.exceptions.Exceptions.propagate(Exceptions.java:57)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	... 133 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:282)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:165)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at brave.httpclient.TracingMainExec.execute(TracingMainExec.java:50)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at brave.httpclient.TracingProtocolExec.execute(TracingProtocolExec.java:41)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:81)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:44)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	... 135 common frames omitted
2018-08-06 13:48:11,508 [] [] [] [18148] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 14:02:46,593 [] [] [] [28776] [main] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@75437611: startup date [Mon Aug 06 14:02:46 CST 2018]; root of context hierarchy
2018-08-06 14:02:46,840 [] [] [] [28776] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 14:02:46,872 [] [] [] [28776] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'configurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a0d56121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 14:02:48,208 [] [] [] [28776] [main] INFO  com.tuobuxie.ApiGatewayApplication => No active profile set, falling back to default profiles: default
2018-08-06 14:02:48,227 [] [] [] [28776] [main] INFO  o.s.b.w.s.c.AnnotationConfigServletWebServerApplicationContext => Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ecd267f: startup date [Mon Aug 06 14:02:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@75437611
2018-08-06 14:02:49,540 [] [] [] [28776] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'proxyRequestHelper' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$EndpointConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$EndpointConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulProxyAutoConfiguration$NoActuatorConfiguration; factoryMethodName=proxyRequestHelper; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulProxyAutoConfiguration$NoActuatorConfiguration.class]]
2018-08-06 14:02:49,559 [] [] [] [28776] [main] INFO  o.s.b.f.s.DefaultListableBeanFactory => Overriding bean definition for bean 'counterFactory' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulMetricsConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulMetricsConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.cloud.netflix.zuul.ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration; factoryMethodName=counterFactory; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/cloud/netflix/zuul/ZuulServerAutoConfiguration$ZuulCounterFactoryConfiguration.class]]
2018-08-06 14:02:50,435 [] [] [] [28776] [main] INFO  o.s.cloud.context.scope.GenericScope => BeanFactory id=47160e54-7f75-3889-96e7-850c58b39a2e
2018-08-06 14:02:50,491 [] [] [] [28776] [main] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 14:02:51,215 [] [] [] [28776] [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker => Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a0d56121] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-08-06 14:02:52,051 [] [] [] [28776] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat initialized with port(s): 14000 (http)
2018-08-06 14:02:52,073 [] [] [] [28776] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Initializing ProtocolHandler ["http-nio-14000"]
2018-08-06 14:02:52,090 [] [] [] [28776] [main] INFO  o.a.catalina.core.StandardService => Starting service [Tomcat]
2018-08-06 14:02:52,091 [] [] [] [28776] [main] INFO  o.a.catalina.core.StandardEngine => Starting Servlet Engine: Apache Tomcat/8.5.31
2018-08-06 14:02:52,109 [] [] [] [28776] [localhost-startStop-1] INFO  o.a.c.core.AprLifecycleListener => The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [D:\lsf\JavaDevelop\java8-x64\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;D:/lsf/JavaDevelop/java8-x64/jre/bin/server;D:/lsf/JavaDevelop/java8-x64/jre/bin;D:/lsf/JavaDevelop/java8-x64/jre/lib/amd64;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseGit\bin;C:\WINDOWS\System32\OpenSSH\;C:\Program Files (x86)\Pandoc\;C:\Users\lishaofeng\AppData\Local\Microsoft\WindowsApps;D:\lsf\learn\thrift;C:\Program Files (x86)\IDM Computer Solutions\UltraEdit\;D:\lsf\JavaDevelop\java8-x64\bin;D:\lsf\JavaDevelop\java8-x64\jre\bin;D:\lsf\JavaDevelop\gradle-4.6\bin;D:\lsf\JavaDevelop\cygwin64\bin;C:\Users\lishaofeng\AppData\Local\GitHubDesktop\bin;D:\lsf\JavaDevelop\eclipse-4.6-jee-64;;.]
2018-08-06 14:02:52,375 [] [] [] [28776] [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring embedded WebApplicationContext
2018-08-06 14:02:52,375 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.web.context.ContextLoader => Root WebApplicationContext: initialization completed in 4148 ms
2018-08-06 14:02:53,690 [] [] [] [28776] [localhost-startStop-1] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 14:02:53,690 [] [] [] [28776] [localhost-startStop-1] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 14:02:53,706 [] [] [] [28776] [localhost-startStop-1] INFO  c.n.config.DynamicPropertyFactory => DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6383cf20
2018-08-06 14:02:55,858 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 14:02:57,828 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.cloud.commons.util.InetUtils => Cannot determine local hostname
2018-08-06 14:03:03,014 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'characterEncodingFilter' to: [/*]
2018-08-06 14:03:03,016 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'tracingFilter' to: [/*]
2018-08-06 14:03:03,018 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'exceptionLoggingFilter' to: [/*]
2018-08-06 14:03:03,018 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-08-06 14:03:03,018 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-08-06 14:03:03,018 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'requestContextFilter' to: [/*]
2018-08-06 14:03:03,019 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'httpTraceFilter' to: [/*]
2018-08-06 14:03:03,019 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean => Mapping filter: 'webMvcMetricsFilter' to: [/*]
2018-08-06 14:03:03,019 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet dispatcherServlet mapped to [/]
2018-08-06 14:03:03,021 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean => Servlet zuulServlet mapped to [/zuul/*]
2018-08-06 14:03:03,023 [] [] [] [28776] [localhost-startStop-1] INFO  o.s.b.a.e.w.ServletEndpointRegistrar => Registered '/actuator/hystrix.stream' to hystrix.stream-actuator-endpoint
2018-08-06 14:03:03,354 [] [] [] [28776] [main] WARN  c.n.c.sources.URLConfigurationSource => No URLs will be polled as dynamic configuration sources.
2018-08-06 14:03:03,354 [] [] [] [28776] [main] INFO  c.n.c.sources.URLConfigurationSource => To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-08-06 14:03:04,370 [] [] [] [28776] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 14:03:06,668 [] [] [] [28776] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter => Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ecd267f: startup date [Mon Aug 06 14:02:48 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@75437611
2018-08-06 14:03:07,117 [] [] [] [28776] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-08-06 14:03:07,118 [] [] [] [28776] [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping => Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 14:03:07,185 [] [] [] [28776] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 14:03:07,186 [] [] [] [28776] [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping => Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-08-06 14:03:09,592 [] [] [] [28776] [main] INFO  o.s.c.n.zuul.ZuulFilterInitializer => Starting filter initializer
2018-08-06 14:03:09,698 [] [] [] [28776] [main] INFO  o.s.b.a.e.web.EndpointLinksResolver => Exposing 1 endpoint(s) beneath base path '/actuator'
2018-08-06 14:03:09,899 [] [] [] [28776] [main] INFO  o.s.b.a.e.w.s.WebMvcEndpointHandlerMapping => Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-08-06 14:03:10,126 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Registering beans for JMX exposure on startup
2018-08-06 14:03:10,141 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-08-06 14:03:10,143 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-08-06 14:03:10,146 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-08-06 14:03:10,153 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-08-06 14:03:10,204 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-08-06 14:03:10,217 [] [] [] [28776] [main] INFO  o.s.j.e.a.AnnotationMBeanExporter => Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3ecd267f,type=ConfigurationPropertiesRebinder]
2018-08-06 14:03:10,229 [] [] [] [28776] [main] INFO  o.s.c.s.DefaultLifecycleProcessor => Starting beans in phase 0
2018-08-06 14:03:10,243 [] [] [] [28776] [main] INFO  o.s.c.n.eureka.InstanceInfoFactory => Setting initial instance status as: STARTING
2018-08-06 14:03:10,295 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Initializing Eureka in region us-east-1
2018-08-06 14:03:10,354 [] [] [] [28776] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON encoding codec LegacyJacksonJson
2018-08-06 14:03:10,355 [] [] [] [28776] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using JSON decoding codec LegacyJacksonJson
2018-08-06 14:03:10,505 [] [] [] [28776] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML encoding codec XStreamXml
2018-08-06 14:03:10,506 [] [] [] [28776] [main] INFO  c.n.d.p.DiscoveryJerseyProvider => Using XML decoding codec XStreamXml
2018-08-06 14:03:10,684 [] [] [] [28776] [main] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
2018-08-06 14:03:10,762 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Disable delta property : false
2018-08-06 14:03:10,763 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Single vip registry refresh property : null
2018-08-06 14:03:10,763 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Force full registry fetch : false
2018-08-06 14:03:10,763 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Application is null : false
2018-08-06 14:03:10,764 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Registered Applications size is zero : true
2018-08-06 14:03:10,765 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Application version is -1: true
2018-08-06 14:03:10,766 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Getting all instance registry info from the eureka server
2018-08-06 14:03:10,938 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => The response status is 200
2018-08-06 14:03:10,941 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Starting heartbeat executor: renew interval is: 30
2018-08-06 14:03:10,943 [] [] [] [28776] [main] INFO  c.n.discovery.InstanceInfoReplicator => InstanceInfoReplicator onDemand update allowed rate per min is 4
2018-08-06 14:03:10,946 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Discovery Client initialized at timestamp 1533535390945 with initial instances count: 6
2018-08-06 14:03:10,955 [] [] [] [28776] [main] INFO  o.s.c.n.e.s.EurekaServiceRegistry => Registering application api-gateway with eureka with status UP
2018-08-06 14:03:10,955 [] [] [] [28776] [main] INFO  c.netflix.discovery.DiscoveryClient => Saw local status change event StatusChangeEvent [timestamp=1533535390955, current=UP, previous=STARTING]
2018-08-06 14:03:10,975 [] [] [] [28776] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000: registering service...
2018-08-06 14:03:10,984 [] [] [] [28776] [main] INFO  o.a.coyote.http11.Http11NioProtocol => Starting ProtocolHandler ["http-nio-14000"]
2018-08-06 14:03:11,004 [] [] [] [28776] [main] INFO  o.a.tomcat.util.net.NioSelectorPool => Using a shared selector for servlet write/read
2018-08-06 14:03:11,017 [] [] [] [28776] [DiscoveryClient-InstanceInfoReplicator-0] INFO  c.netflix.discovery.DiscoveryClient => DiscoveryClient_API-GATEWAY/localhost:api-gateway:14000 - registration status: 204
2018-08-06 14:03:11,051 [] [] [] [28776] [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer => Tomcat started on port(s): 14000 (http) with context path ''
2018-08-06 14:03:11,052 [] [] [] [28776] [main] INFO  o.s.c.n.e.s.EurekaAutoServiceRegistration => Updating port to 14000
2018-08-06 14:03:11,055 [] [] [] [28776] [main] INFO  com.tuobuxie.ApiGatewayApplication => Started ApiGatewayApplication in 26.226 seconds (JVM running for 26.744)
2018-08-06 14:03:11,482 [9395e09ccec0b050] [] [9395e09ccec0b050] [28776] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-client/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 14:03:11,483 [9395e09ccec0b050] [] [9395e09ccec0b050] [28776] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-producer/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 14:03:11,483 [9395e09ccec0b050] [] [9395e09ccec0b050] [28776] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/config-server/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 14:03:11,483 [9395e09ccec0b050] [] [9395e09ccec0b050] [28776] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/eureka-consumer-feign-hystrix/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 14:03:11,483 [9395e09ccec0b050] [] [9395e09ccec0b050] [28776] [http-nio-14000-exec-1] INFO  o.s.c.n.zuul.web.ZuulHandlerMapping => Mapped URL path [/turbine-stream/**] onto handler of type [class org.springframework.cloud.netflix.zuul.web.ZuulController]
2018-08-06 14:05:21,536 [] [] [] [28776] [http-nio-14000-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] => Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-08-06 14:05:21,536 [] [] [] [28776] [http-nio-14000-exec-3] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization started
2018-08-06 14:05:21,561 [] [] [] [28776] [http-nio-14000-exec-3] INFO  o.s.web.servlet.DispatcherServlet => FrameworkServlet 'dispatcherServlet': initialization completed in 25 ms
2018-08-06 14:05:21,597 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-eureka-consumer-feign-hystrix: startup date [Mon Aug 06 14:05:21 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ecd267f
2018-08-06 14:05:21,655 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 14:05:21,864 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 14:05:21,890 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.u.c.ShutdownEnabledTimer => Shutdown hook installed for: NFLoadBalancer-PingTimer-eureka-consumer-feign-hystrix
2018-08-06 14:05:21,992 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.loadbalancer.BaseLoadBalancer => Client: eureka-consumer-feign-hystrix instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-consumer-feign-hystrix,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-06 14:05:22,000 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.l.DynamicServerListLoadBalancer => Using serverListUpdater PollingServerListUpdater
2018-08-06 14:05:22,052 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 14:05:22,055 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] INFO  c.n.l.DynamicServerListLoadBalancer => DynamicServerListLoadBalancer for client eureka-consumer-feign-hystrix initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=eureka-consumer-feign-hystrix,current list of Servers=[localhost:9003],Load balancer stats=Zone stats: {defaultzone=[Zone:defaultzone;	Instance count:1;	Active connections count: 0;	Circuit breaker tripped count: 0;	Active connections per server: 0.0;]
},Server stats: [[Server:localhost:9003;	Zone:defaultZone;	Total Requests:0;	Successive connection failure:0;	Total blackout seconds:0;	Last connection made:Thu Jan 01 08:00:00 CST 1970;	First connection made: Thu Jan 01 08:00:00 CST 1970;	Active Connections:0;	total failure count in last (1000) msecs:0;	average resp time:0.0;	90 percentile resp time:0.0;	95 percentile resp time:0.0;	min resp time:0.0;	max resp time:0.0;	stddev resp time:0.0]
]}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@77591747
2018-08-06 14:05:23,063 [] [] [] [28776] [PollingServerListUpdater-0] INFO  c.n.config.ChainedDynamicProperty => Flipping property: eureka-consumer-feign-hystrix.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 14:05:23,316 [b6c6d7169da0bfb7] [] [b6c6d7169da0bfb7] [28776] [http-nio-14000-exec-3] WARN  o.s.c.n.z.f.post.SendErrorFilter => Error during filtering
com.netflix.zuul.exception.ZuulException: Forwarding error
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.handleException(RibbonRoutingFilter.java:189)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:164)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.run(RibbonRoutingFilter.java:112)
	at com.netflix.zuul.ZuulFilter.runFilter(ZuulFilter.java:117)
	at com.netflix.zuul.FilterProcessor.processZuulFilter(FilterProcessor.java:193)
	at com.netflix.zuul.FilterProcessor.runFilters(FilterProcessor.java:157)
	at com.netflix.zuul.FilterProcessor.route(FilterProcessor.java:118)
	at com.netflix.zuul.ZuulRunner.route(ZuulRunner.java:96)
	at com.netflix.zuul.http.ZuulServlet.route(ZuulServlet.java:116)
	at com.netflix.zuul.http.ZuulServlet.service(ZuulServlet.java:81)
	at org.springframework.web.servlet.mvc.ServletWrappingController.handleRequestInternal(ServletWrappingController.java:165)
	at org.springframework.cloud.netflix.zuul.web.ZuulController.handleRequest(ZuulController.java:44)
	at org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter.handle(SimpleControllerHandlerAdapter.java:52)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:158)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:126)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:111)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.cloud.sleuth.instrument.web.ExceptionLoggingFilter.doFilter(ExceptionLoggingFilter.java:48)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at brave.servlet.TracingFilter.doFilter(TracingFilter.java:86)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.netflix.client.ClientException: null
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:118)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:186)
	at org.springframework.cloud.netflix.zuul.filters.route.support.AbstractRibbonCommand.run(AbstractRibbonCommand.java:51)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:48)
	at rx.internal.operators.OnSubscribeMap.call(OnSubscribeMap.java:33)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.internal.operators.BlockingOperatorToFuture.toFuture(BlockingOperatorToFuture.java:51)
	at rx.observables.BlockingObservable.toFuture(BlockingObservable.java:410)
	at com.netflix.hystrix.HystrixCommand.queue(HystrixCommand.java:378)
	at com.netflix.hystrix.HystrixCommand.execute(HystrixCommand.java:344)
	at org.springframework.cloud.netflix.zuul.filters.route.RibbonRoutingFilter.forward(RibbonRoutingFilter.java:159)
	... 71 common frames omitted
Caused by: java.lang.RuntimeException: java.net.SocketTimeoutException: Read timed out
	at rx.exceptions.Exceptions.propagate(Exceptions.java:57)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:463)
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340)
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112)
	... 133 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:137)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:153)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:282)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:163)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:165)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:272)
	at brave.httpclient.TracingMainExec.execute(TracingMainExec.java:50)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:185)
	at brave.httpclient.TracingProtocolExec.execute(TracingProtocolExec.java:41)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:81)
	at org.springframework.cloud.netflix.ribbon.apache.RibbonLoadBalancingHttpClient.execute(RibbonLoadBalancingHttpClient.java:44)
	at com.netflix.client.AbstractLoadBalancerAwareClient$1.call(AbstractLoadBalancerAwareClient.java:104)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:303)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$3$1.call(LoadBalancerCommand.java:287)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:231)
	at rx.internal.util.ScalarSynchronousObservable$3.call(ScalarSynchronousObservable.java:228)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.drain(OnSubscribeConcatMap.java:286)
	at rx.internal.operators.OnSubscribeConcatMap$ConcatMapSubscriber.onNext(OnSubscribeConcatMap.java:144)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:185)
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94)
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42)
	at rx.Observable.unsafeSubscribe(Observable.java:10327)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73)
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79)
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45)
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276)
	at rx.Subscriber.setProducer(Subscriber.java:209)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138)
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.subscribe(Observable.java:10423)
	at rx.Observable.subscribe(Observable.java:10390)
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443)
	... 135 common frames omitted
2018-08-06 14:05:24,147 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  o.s.c.a.AnnotationConfigApplicationContext => Refreshing SpringClientFactory-localhost: startup date [Mon Aug 06 14:05:24 CST 2018]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3ecd267f
2018-08-06 14:05:24,277 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  o.s.b.f.a.AutowiredAnnotationBeanPostProcessor => JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2018-08-06 14:05:24,316 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  c.n.config.ChainedDynamicProperty => Flipping property: localhost.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2018-08-06 14:05:24,317 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  c.n.u.c.ShutdownEnabledTimer => Shutdown hook installed for: NFLoadBalancer-PingTimer-localhost
2018-08-06 14:05:24,318 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  c.n.loadbalancer.BaseLoadBalancer => Client: localhost instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2018-08-06 14:05:24,341 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  c.n.l.DynamicServerListLoadBalancer => Using serverListUpdater PollingServerListUpdater
2018-08-06 14:05:24,341 [] [] [] [28776] [AsyncReporter{org.springframework.cloud.sleuth.zipkin2.sender.RestTemplateSender@557e57b}] INFO  c.n.l.DynamicServerListLoadBalancer => DynamicServerListLoadBalancer for client localhost initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=localhost,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@110df730
2018-08-06 14:08:10,781 [] [] [] [28776] [AsyncResolver-bootstrap-executor-0] INFO  c.n.d.s.r.aws.ConfigClusterResolver => Resolving eureka endpoints via configuration
